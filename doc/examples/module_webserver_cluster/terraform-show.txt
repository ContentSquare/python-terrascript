[0maws_autoscaling_group.example:
  id = tf-asg-00b069b7b8d961ca60df18d636
  arn = arn:aws:autoscaling:us-east-1:451793104636:autoScalingGroup:5fa85c78-064e-4fb2-a965-a107c925c21d:autoScalingGroupName/tf-asg-00b069b7b8d961ca60df18d636
  availability_zones.# = 6
  availability_zones.1252502072 = us-east-1f
  availability_zones.1305112097 = us-east-1b
  availability_zones.2762590996 = us-east-1d
  availability_zones.3551460226 = us-east-1e
  availability_zones.3569565595 = us-east-1a
  availability_zones.986537655 = us-east-1c
  default_cooldown = 300
  desired_capacity = 2
  force_delete = false
  health_check_grace_period = 300
  health_check_type = ELB
  launch_configuration = terraform-00b069b7b8d961ca60df18d635
  load_balancers.# = 1
  load_balancers.2727694150 = webservers-stage
  max_size = 2
  metrics_granularity = 1Minute
  min_size = 2
  name = tf-asg-00b069b7b8d961ca60df18d636
  placement_group = 
  protect_from_scale_in = false
  suspended_processes.# = 0
  tag.# = 1
  tag.2305202985.key = Name
  tag.2305202985.propagate_at_launch = true
  tag.2305202985.value = webservers-stage
  target_group_arns.# = 0
  termination_policies.# = 0
  vpc_zone_identifier.# = 1
  vpc_zone_identifier.0 = 
  wait_for_capacity_timeout = 10m
aws_elb.example:
  id = webservers-stage
  access_logs.# = 0
  availability_zones.# = 6
  availability_zones.1252502072 = us-east-1f
  availability_zones.1305112097 = us-east-1b
  availability_zones.2762590996 = us-east-1d
  availability_zones.3551460226 = us-east-1e
  availability_zones.3569565595 = us-east-1a
  availability_zones.986537655 = us-east-1c
  connection_draining = false
  connection_draining_timeout = 300
  cross_zone_load_balancing = true
  dns_name = webservers-stage-820923553.us-east-1.elb.amazonaws.com
  health_check.# = 1
  health_check.0.healthy_threshold = 2
  health_check.0.interval = 30
  health_check.0.target = HTTP:8080/
  health_check.0.timeout = 3
  health_check.0.unhealthy_threshold = 2
  idle_timeout = 60
  instances.# = 0
  internal = false
  listener.# = 1
  listener.3931999347.instance_port = 8080
  listener.3931999347.instance_protocol = http
  listener.3931999347.lb_port = 80
  listener.3931999347.lb_protocol = http
  listener.3931999347.ssl_certificate_id = 
  name = webservers-stage
  security_groups.# = 1
  security_groups.2031470625 = sg-d35369a2
  source_security_group = 451793104636/webservers-stage-elb
  source_security_group_id = sg-d35369a2
  subnets.# = 6
  subnets.1760734550 = subnet-687afb55
  subnets.2316163714 = subnet-96c12fce
  subnets.3364803706 = subnet-cad3b9af
  subnets.4037812412 = subnet-70974006
  subnets.4230477527 = subnet-0dbda526
  subnets.571211586 = subnet-c6b420ca
  tags.% = 0
  zone_id = Z35SXDOTRQ7X7K
aws_launch_configuration.example:
  id = terraform-00b069b7b8d961ca60df18d635
  associate_public_ip_address = false
  ebs_block_device.# = 0
  ebs_optimized = false
  enable_monitoring = true
  ephemeral_block_device.# = 0
  iam_instance_profile = 
  image_id = ami-40d28157
  instance_type = t2.micro
  key_name = 
  name = terraform-00b069b7b8d961ca60df18d635
  root_block_device.# = 0
  security_groups.# = 1
  security_groups.4284233874 = sg-ca4b71bb
  spot_price = 
  user_data = 8ce78fe83de31d71135e4fefec28556a291ecc86
  vpc_classic_link_id = 
  vpc_classic_link_security_groups.# = 0
aws_security_group.elb:
  id = sg-d35369a2
  description = Managed by Terraform
  egress.# = 0
  ingress.# = 0
  name = webservers-stage-elb
  owner_id = 451793104636
  tags.% = 0
  vpc_id = vpc-d52441b1
aws_security_group.instance:
  id = sg-ca4b71bb
  description = Managed by Terraform
  egress.# = 0
  ingress.# = 0
  name = webservers-stage-instance
  owner_id = 451793104636
  tags.% = 0
  vpc_id = vpc-d52441b1
aws_security_group_rule.allow_all_outbound:
  id = sgrule-2919768816
  cidr_blocks.# = 1
  cidr_blocks.0 = 0.0.0.0/0
  from_port = 0
  protocol = -1
  security_group_id = sg-d35369a2
  self = false
  to_port = 0
  type = egress
aws_security_group_rule.allow_http_inbound:
  id = sgrule-2144263006
  cidr_blocks.# = 1
  cidr_blocks.0 = 0.0.0.0/0
  from_port = 80
  protocol = tcp
  security_group_id = sg-d35369a2
  self = false
  to_port = 80
  type = ingress
aws_security_group_rule.allow_server_http_inbound:
  id = sgrule-241346048
  cidr_blocks.# = 1
  cidr_blocks.0 = 0.0.0.0/0
  from_port = 8080
  protocol = tcp
  security_group_id = sg-ca4b71bb
  self = false
  to_port = 8080
  type = ingress
aws_security_group_rule.allow_testing_inbound:
  id = sgrule-25172220
  cidr_blocks.# = 1
  cidr_blocks.0 = 0.0.0.0/0
  from_port = 12345
  protocol = tcp
  security_group_id = sg-d35369a2
  self = false
  to_port = 12345
  type = ingress
data.aws_availability_zones.all:
  id = 2017-07-27 04:37:08.750836701 +0000 UTC
  names.# = 6
  names.0 = us-east-1a
  names.1 = us-east-1b
  names.2 = us-east-1c
  names.3 = us-east-1d
  names.4 = us-east-1e
  names.5 = us-east-1f
[0m

Outputs:

elb_dns_name = webservers-stage-820923553.us-east-1.elb.amazonaws.com[0m
